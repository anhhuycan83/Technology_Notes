12
1. When we create a branch in git at local environment then one ref is created . For example if a branch Name Test is created 
   then Test will only be appearing in the list of git checkout <tab to see branch list to swith to>
2. Now we will issue command git push --set-upstream origin test 
3. Now Test branch will start appearing on git remote . 
4. Now git checkout <tab> will have Test and origin/Test both . 
4. Now if we delete Test the we should do with following commands :
     git branch -d Test [Wiil delete Test reference]
     git push --delete origin test [Will delte origin/Test refrence and also branch on remote.]
   This will safely delete from local and remote . 
   
   Case II
1. Now if Test was deleted from remote by some one else . Even after git pull both Test and origin/Test  will be there 
   in git chekout <tab>
2. To remove origin/Test do ==> git remote prune origin [It will clear remote references which are deleted by others .] 
3. To remove Test do ==> git branch -d Test [Local branch has to be deleted this way only.]

Moral : To delete the already deleted remote references do ==> git remote prune origin and to delete a branch from local 
        do ==> git branch -d Test
        If a branch is remotely deleted by some one else then git pull and git fetch will not delete origin/Test reference 
        only prune can do that .
        
    Recover:
    1. issue ==> Git reflog 
    2. check the HEAD@{n} where n is the commit message Head position having the commit message from which we want to 
       recover the branch . 
    3. issue  ==> git checkout -b <branch name to recover> <sha of commit found in last step OR HEAD@{n}>
        git checkout -b <branch name to recover> HEAD@{n} or sha
    4. Now git push --set-upstream origin branchName
    
    
    Branch is recovered . 
