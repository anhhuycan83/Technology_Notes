DROP KEYSPACE IF EXISTS productdiscovery;
CREATE KEYSPACE productdiscovery WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'} AND durable_writes = true;
CREATE TABLE productdiscovery.ihg_data_model ( brand_code text, hotel_code text, rate_code text, room_code text, accepted_credit_cards text, address text, breakfast_indicator text, checkin text, checkout text, city text, country text, currency text, dinner_indicator text, extra_person_charge_indicator text, extra_person_description text, extra_person_fee_end_date1 timestamp, extra_person_fee_start_date1 timestamp, facility_name text, fax_number text, gds_room_name text, lunch_indicator text, max_adults text, max_children text, max_occupancy int, phone_number text, rate text, room_long_description text, service_fee_description1 text, service_fee_description2 text, service_fee_end_date1 timestamp, service_fee_end_date2 timestamp, service_fee_flat_amount1 text, service_fee_flat_amount2 text, service_fee_how_applied1 text, service_fee_how_applied2 text, service_fee_percent1 text, service_fee_percent2 text, service_fee_start_date1 timestamp, service_fee_start_date2 timestamp, service_fee_type1 text, service_fee_type2 text, smoking text, state text, tax_description1 text, tax_description2 text, tax_end_date1 timestamp, tax_end_date2 timestamp, tax_flat_amount1 text, tax_flat_amount2 text, tax_how_applied1 text, tax_how_applied2 text, tax_include_indicator text, tax_percent1 text, tax_percent2 text, tax_start_date1 timestamp, tax_start_date2 timestamp, tax_type1 text, tax_type2 text, timezone text, zip_code text, PRIMARY KEY ((brand_code, hotel_code), rate_code, room_code) ) WITH CLUSTERING ORDER BY (rate_code ASC, room_code ASC) AND bloom_filter_fp_chance = 0.01 AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'} AND comment = '' AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'} AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'} AND crc_check_chance = 1.0 AND dclocal_read_repair_chance = 0.1 AND default_time_to_live = 0 AND gc_grace_seconds = 864000 AND max_index_interval = 2048 AND memtable_flush_period_in_ms = 0 AND min_index_interval = 128 AND read_repair_chance = 0.0 AND speculative_retry = '99PERCENTILE';
CREATE TABLE productdiscovery.property_state ( shop_state int, brand_code text, hotel_code text, sga_code text, interval int, shop_date date, start_date date, PRIMARY KEY (shop_state, brand_code, hotel_code, sga_code) ) WITH CLUSTERING ORDER BY (brand_code ASC, hotel_code ASC, sga_code ASC) AND bloom_filter_fp_chance = 0.01 AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'} AND comment = '' AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'} AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'} AND crc_check_chance = 1.0 AND dclocal_read_repair_chance = 0.1 AND default_time_to_live = 0 AND gc_grace_seconds = 864000 AND max_index_interval = 2048 AND memtable_flush_period_in_ms = 0 AND min_index_interval = 128 AND read_repair_chance = 0.0 AND speculative_retry = '99PERCENTILE';